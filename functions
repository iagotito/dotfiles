#!/usr/bin/zsh

# copy file content to clipboard
copy() {
    cat $1 | xclip -selection clipboard
}

cs() {
    echo '#!/usr/bin/bash' > $1
    echo '' >> $1
    echo '' >> $1
    chmod +x $1
}

j() {
    JAVA_FILE=$1
    javac $JAVA_FILE
    JAVA_CLASS=$(echo $JAVA_FILE | cut -d . -f1)
    java $JAVA_CLASS
    rm "$JAVA_CLASS.class"
}

# git

gitignore() {
    if [[ -z $@ ]]; then
        echo "Nothing to ignore."
        return
    fi
    ignore=$(echo $@ | sed 's/ /,/g')
    gitignore_content=$(curl -s "https://www.toptal.com/developers/gitignore/api/$ignore")
    echo $gitignore_content > .gitignore
}

repo_description() {
    if [[ ! -f README.md ]]; then
        echo "No README.md file found."
        return
    fi
    description=$(awk -v RS= -v p="2" 'NR == p' README.md)
    echo $description
}

# find

findf() {
  find $1 -type f -name "$2" 2> /dev/null
}

findd() {
  find $1 -type d -name "$2" 2> /dev/null
}

# merge files
mergefiles() {
  output_file="merged_files.txt"
  echo "" > "$output_file"

  echo "Merging files"
  for file in "$@"; do
    if [[ -f "$file" ]]; then
      echo "$file"
      echo ">>> $file" >> "$output_file"
      cat "$file" >> "$output_file"
      echo >> "$output_file"
    else
      echo "Warning: File '$file' not found. Skipping." >&2
    fi
  done

  echo "Files merged into '$output_file'"
}

# gitmoji-fuzzy-hook
addgitmoji() {
  gitmoji-fuzzy-hook-init >> ./.git/hooks/prepare-commit-msg
  chmod +x ./.git/hooks/prepare-commit-msg
}
