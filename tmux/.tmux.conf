set-option -sa terminal-overrides ",xterm*:Tc"
# makes tmux recognize 256 colors
#set -g default-terminal "screen-256color"

# remove delay with vim's Esc
set -s escape-time 0

# change prefix to Ctrl+Space
unbind C-b
set -g prefix C-Space

bind b send-prefix

# bind Ctrl+r to reload the config file
unbind C-r
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# split screen in three equal size vertinal panes
unbind C-l
bind C-l split-window -h \; split-window -h \; select-layout even-horizontal

# enable mouse actions
set -g mouse on

# v and h to split vertically and horizontally
# v and h are not binded by default, but we never know in the next versions...
unbind v
unbind h

unbind % # Split vertically
unbind '"' # Split horizontally

bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# navigate throught panes using hjkl
#bind -n C-h select-pane -L
#bind -n C-j select-pane -D
#bind -n C-k select-pane -U
#bind -n C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# create and rename windows using w and n
unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively

bind n command-prompt "rename-window '%%'"   # set n to rename window
bind w new-window -c "#{pane_current_path}"  # set w to create new window

# navigate throught windows using hl
bind -n M-h previous-window
bind -n M-l next-window

# starts the index of the panels and windows at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# enable vi key bindings in copy mode
set-window-option -g mode-keys vi

# select text with v and copy with y
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# load tmux theme
#run "$HOME/.config/tmux/themes/dracula/load_theme.tmux"
run "$HOME/.config/tmux/themes/catppuccin/load_theme.tmux"
