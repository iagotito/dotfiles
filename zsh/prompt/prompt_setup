# Some adjustment (to me) over the purification
# Small changes by Iago Tito over:

# Purification
# by Matthieu Cneude
# https://github.com/Phantas0s/purification

# Which was based on:

# Purity
# by Kevin Lanni
# https://github.com/therealklanni/purity
# MIT License

# prompt:
# %F => color dict
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)

# Display git status
# TODO to refactor with switch / using someting else than grep
# Might be faster using ripgrep too
git_prompt_status() {
  local INDEX STATUS

  INDEX=$(command git status --porcelain -b 2> /dev/null)

  STATUS=""

  if $(echo "$INDEX" | command grep -E '^\?\? ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_UNTRACKED$STATUS"
  fi

  if $(echo "$INDEX" | grep '^A  ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
  elif $(echo "$INDEX" | grep '^M  ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
  elif $(echo "$INDEX" | grep '^MM ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
  fi

  if $(echo "$INDEX" | grep '^ M ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  elif $(echo "$INDEX" | grep '^AM ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  elif $(echo "$INDEX" | grep '^MM ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  elif $(echo "$INDEX" | grep '^ T ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  fi

  if $(echo "$INDEX" | grep '^R  ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_RENAMED$STATUS"
  fi

  if $(echo "$INDEX" | grep '^ D ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
  elif $(echo "$INDEX" | grep '^D  ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
  elif $(echo "$INDEX" | grep '^AD ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
  fi

  if $(command git rev-parse --verify refs/stash >/dev/null 2>&1); then
    STATUS="$ZSH_THEME_GIT_PROMPT_STASHED$STATUS"
  fi

  if $(echo "$INDEX" | grep '^UU ' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_UNMERGED$STATUS"
  fi

  if $(echo "$INDEX" | grep '^## [^ ]\+ .*ahead' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_AHEAD$STATUS"
  fi

  if $(echo "$INDEX" | grep '^## [^ ]\+ .*behind' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_BEHIND$STATUS"
  fi

  if $(echo "$INDEX" | grep '^## [^ ]\+ .*diverged' &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DIVERGED$STATUS"
  fi

  if [[ ! -z "$STATUS" ]]; then
    echo " %f[ $STATUS ]" | xargs # trim white spaces
  fi
}


prompt_git_branch() {
    autoload -Uz vcs_info
    precmd_vcs_info() { vcs_info }
    precmd_functions+=( precmd_vcs_info )
    setopt prompt_subst
    zstyle ':vcs_info:git:*' formats '%b'
}

prompt_git_info() {
    if [[ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" == "true" ]]; then
        current_branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
        echo "$ZSH_THEME_GIT_PROMPT_PREFIX$current_branch$ZSH_THEME_GIT_PROMPT_SUFFIX"
    fi
}

get_pad() {
    # see: https://www.commandlinefu.com/commands/view/3956/remove-color-codes-special-characters-with-sed
    plain_line=$(echo $1 | sed -r "s,\x1B\[[0-9;]*[a-zA-Z],,g")
    plain_git_info=$(echo $2 | sed -r "s,\x1B\[[0-9;]*[a-zA-Z],,g")
    let pad=$COLUMNS-${#plain_line}-${#plain_git_info}
    echo $pad
}

get_virtual_env() {
    virtual_env=${VIRTUAL_ENV##*/}
    if [[ $virtual_env ]]; then
        virtual_env="%F{51}($virtual_env)%f "
    fi
    echo $virtual_env
}

build_prompt() {
    venv=$(get_virtual_env)
    line_info=$(print -P '$venv%F{10}%~%f')
    git_info=$(print -P '$(prompt_git_info) $(git_prompt_status)')

    pad=$(get_pad $line_info $git_info)
    if [[ $pad -le 0 ]]; then
        line_info=$(print -P '$venv%F{10}.../%1d%f')
        pad=$(get_pad $line_info $git_info)
    fi

    git_info=$(printf "%${pad}s%s" "" "$git_info")

    PROMPT=$'$line_info$git_info\n%B%F{blue}>%f%b '
}

prompt_setup() {
    # Display git branch

    ZSH_THEME_GIT_PROMPT_PREFIX=" %F{202}λ:%f%F{#a97f7c}" # OrangeRed1 and Blue1 256 color code
    							  # for the branch color, #a97fc7
							  # (a light purple) is also nice
    ZSH_THEME_GIT_PROMPT_DIRTY=""
    ZSH_THEME_GIT_PROMPT_CLEAN=""

    ZSH_THEME_GIT_PROMPT_ADDED="%F{green}+%f "
    ZSH_THEME_GIT_PROMPT_MODIFIED="%F{208}!%f " # DarkOrange 256 color code
    ZSH_THEME_GIT_PROMPT_DELETED="%F{red}x%f "
    ZSH_THEME_GIT_PROMPT_RENAMED="%F{magenta}➜%f "
    ZSH_THEME_GIT_PROMPT_UNMERGED="%F{yellow}═%f "
    ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{red}-%f "
    ZSH_THEME_GIT_PROMPT_STASHED="%B%F{red}S%f%b "
    ZSH_THEME_GIT_PROMPT_BEHIND="%B%F{red}↓%f%b "
    ZSH_THEME_GIT_PROMPT_AHEAD="%B%F{green}↑%f%b "

    prompt_git_branch
    precmd_functions+=(build_prompt)
}

prompt_setup
